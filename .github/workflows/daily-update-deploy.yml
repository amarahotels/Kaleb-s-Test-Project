name: Update Places, Update Events, and Deploy

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 16 * * *"  # 12:00 AM SGT daily
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # --------------------------
      # Common: Checkout Repo
      # --------------------------
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true
          fetch-depth: 0

      # --------------------------
      # Step 1: Update Places
      # --------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (Places)
        run: pip install requests

      - name: Generate places.json
        run: python get_places.py
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Commit & Push changes for places.json (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain public/data/places.json)" ]]; then
            git add public/data/places.json
            git commit -m "Auto-update places.json ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git pull --rebase origin main
            git push origin main
          else
            echo "✅ No changes to places.json"
          fi

      # --------------------------
      # Step 1.5: Year-round Attractions from Google Places  ⬅️ NEW
      # --------------------------
      - name: Generate featured_attractions.json (+ images)
        run: python get_featured_attractions.py
        env:
          # Reuse the same secret; the script expects GOOGLE_MAPS_API_KEY
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Commit & Push featured attractions (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Commit JSON and any new/updated images
          if ! git diff --quiet -- public/data/featured_attractions.json public/images/attractions; then
            git add public/data/featured_attractions.json || true
            git add -A public/images/attractions || true
            git commit -m "Auto-update featured attractions ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git pull --rebase origin main
            git push origin main
          else
            echo "✅ No changes to featured attractions"
          fi

      # --------------------------
      # Step 2: Update Events
      # --------------------------
      - name: Install dependencies (Events)
        run: pip install requests python-dateutil

      - name: Fetch events from SerpAPI
        run: |
          python get_serpapi_events.py
          # No move needed; script already writes to public/data/events.json
        env:
          SERPAPI_KEY: ${{ secrets.SERPAPI_KEY }}

      - name: Commit & Push changes for events.json (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain public/data/events.json)" ]]; then
            git add public/data/events.json
            git commit -m "chore: update events.json from SerpAPI"
            git pull --rebase origin main
            git push origin main
          else
            echo "✅ No changes to events.json"
          fi

      # --------------------------
      # Step 3: Deploy to Firebase
      # --------------------------
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase
        run: firebase deploy --project amara-concierge-88c12 --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
